<?phpif(!class_exists('WP_List_Table')){	require_once( ABSPATH . 'wp-admin/includes/class-wp-list-table.php' );}if(!class_exists('VgCard_CURLObject')){	require_once plugin_dir_path(__FILE__).'../curl/class-vgcard-curl-object.php';}class VgCards_List_Table extends WP_List_Table {	/**	 * 	 * @var VgCard_CURLObject	 */	var $_model;		function __construct(){		global $status, $page;		$this->_model = new VgCard_CURLObject();		//Set parent defaults		parent::__construct( array(            'singular'  => 'card',     //singular name of the listed records            'plural'    => 'cards',    //plural name of the listed records            'ajax'      => false        //does this table support ajax?		) );	}	function column_default($item, $column_name){		switch($column_name){			case 'clan':			case 'rarity':			case 'expansion':				return $item->$column_name;			default:				return print_r($item,true); //Show the whole array for troubleshooting purposes		}	}		function column_cd($item){		return sprintf('%1$s<br>By: <a href="#">%2$s</a>',		/*$1%s*/ strftime("%Y:%m:%d",10),		/*$2%s*/ 'colin'		);	}		function column_md($item){		return sprintf('%1$s<br>By: <a href="#">%2$s</a>',		/*$1%s*/ strftime("%Y:%m:%d",10),		/*$2%s*/ 'colin'		);	}		function column_clan($item){		//Return the title contents		return sprintf('%1$s<br><span style="color:rgb(33, 117, 155)">(%2$s)</span>',		/*$1%s*/ $item->clan,		/*$2%s*/ $item->nation		);	}		function column_title($item){		//Return the title contents		return sprintf('<a href="?page=%1$s&card=%2$s"> %3$s</a><span style="color:silver">(sn:%4$s)</span><br><span style="color:rgb(33, 117, 155)">(%5$s)</span>',		/*$1%s*/ $_REQUEST['page'],		/*$2%s*/ $item->id,		/*$3%s*/ $item->title,		/*$4%s*/ $item->serial,		/*$5%s*/ $item->subtitle		);	}	//	function column_serial($item){////		//Build row actions//		$actions = array(//            'edit'      => sprintf('<a href="?page=%s&action=%s&card=%s">'.__('Edit').'</a>',$_REQUEST['page'],'edit',$item->id),//            'delete'    => sprintf('<a href="?page=%s&action=%s&card=%s">'.__('Delete').'</a>',$_REQUEST['page'],'delete',$item->id),//		);////		//Return the title contents//		return sprintf('%1$s <span style="color:silver">(id:%2$s)</span>%3$s',//		/*$1%s*/ $item->serial,//		/*$2%s*/ $item->id,//		/*$3%s*/ $this->row_actions($actions)//		);//	}	function column_cb($item){		return sprintf(            '<input type="checkbox" name="%1$s[]" value="%2$s" />',		/*$1%s*/ $this->_args['singular'],  //Let's simply repurpose the table's singular label ("movie")		/*$2%s*/ $item->id                //The value of the checkbox should be the record's id		);	}	function get_columns(){		$columns = array(            'cb'        => '<input type="checkbox" />', //Render a checkbox instead of text			'title'		=> __('Title'),            'expansion'  => 'Expansion',		 	'clan'  => 'Clan',            'rarity'    => 'Rarity',            );            return $columns;	}	function get_sortable_columns() {		$sortable_columns = array(            'serial'     => array('serial',true),     //true means its already sorted		);		return $sortable_columns;	}		function get_bulk_actions() {		$actions = array(            'delete'    => __('Delete')            );            return $actions;	}	function process_bulk_action() {		if( 'delete'===$this->current_action() ) {			wp_die('Items deleted (or they would be if we had items to delete)!');		}	}	/** ************************************************************************	 * REQUIRED! This is where you prepare your data for display. This method will	 * usually be used to query the database, sort and filter the data, and generally	 * get it ready to be displayed. At a minimum, we should set $this->items and	 * $this->set_pagination_args(), although the following properties and methods	 * are frequently interacted with here...	 *	 * @uses $this->_column_headers	 * @uses $this->items	 * @uses $this->get_columns()	 * @uses $this->get_sortable_columns()	 * @uses $this->get_pagenum()	 * @uses $this->set_pagination_args()	 **************************************************************************/	function prepare_items() {		$per_page = 20;		$columns = $this->get_columns();		$hidden = array();		$sortable = $this->get_sortable_columns();		$this->_column_headers = array($columns, $hidden, $sortable);		$current_page = $this->get_pagenum();				$total_items = $this->_model->counts();		$this->items = $this->_model->listItem($current_page, $per_page);				$this->set_pagination_args( array(            'total_items' => $total_items,                  //WE have to calculate the total number of items            'per_page'    => $per_page,                     //WE have to determine how many items to show on a page            'total_pages' => ceil($total_items/$per_page)   //WE have to calculate the total number of pages		) );		}function prepare_item($conditions) {	echo '<pre>';	print_r($conditions);	echo '</pre>';}function description() {	?>	<div style="background:#eee;border:1px solid #CCC;padding:0 10px;margin-top:5px;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;">	<p>这里是卡的描述文字</p>	<br />	</div>	<?php}}
